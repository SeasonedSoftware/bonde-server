pipeline:
  build:
    image: alpine:3.5
    commands:
      - apk update
      - apk upgrade
      - apk --update add --virtual build_deps postgresql-dev libxml2-dev libxslt-dev imagemagick imagemagick-dev openssl libpq libffi-dev bash curl-dev libstdc++ tzdata bash ca-certificates build-base ruby-dev libc-dev linux-headers postgresql-client postgresql git
      - apk --update add ruby ruby-io-console ruby-bundler ruby-irb ruby-bigdecimal ruby-json
      - cp /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime
      - echo "America/Sao_Paulo" > /etc/timezone
      - export RAILS_ENV=test RACK_ENV=test DATABASE_URL=postgres://bonde@127.0.0.1/hub_api_test
      - psql -c 'create role bonde SUPERUSER LOGIN;' -h127.0.0.1 -Upostgres
      - psql -c 'create database hub_api_test;' -h127.0.0.1 -Upostgres
      - bundle install
      - rake db:migrate
      - bundle exec rspec spec
  publish-staging:
    image: plugins/docker
    repo: nossas/bonde-server
    username: lpirola
    password: ${DOCKER_PASSWORD}
    tags:
      - ${DRONE_BRANCH}
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  deploy-staging:
    image: appleboy/drone-ssh
    host: staging.bonde.org
    username: ubuntu
    port: 22
    script:
      - sudo docker pull nossas/bonde-server:${DRONE_BRANCH}
      - sudo docker tag nossas/bonde-server:${DRONE_BRANCH} dokku/server:latest
      - dokku tags:deploy server latest
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  notify:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: n_tech
    username: CI - ${DRONE_REPO_NAME}
    when:
      event: [ push, tag, build, publish, deployment, pull_request ]
      status: [ success, failure ]
services:
  database:
    image: postgres:9.6
  queue:
    image: redis:3.2.4-alpine
