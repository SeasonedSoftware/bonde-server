pipeline:
  build:
    image: ruby:2.3.0-alpine
    commands:
      - apk -U --no-cache add libpq ca-certificates openssl tzdata build-base postgresql-dev imagemagick imagemagick-dev
      - cp /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime && echo "America/Sao_Paulo" >  /etc/timezone
      - cp config/database.sample.yml config/database.yml
      - psql -c 'create role hub SUPERUSER LOGIN;' postgres
      - psql -c 'create database hub_api_test;' -U hub postgres
      - bin/bundle install --path=gems --retry=5 --jobs=5
      - bin/rake db:migrate
      - bin/bundle exec rspec spec
  publish-staging:
    image: plugins/docker
    repo: nossas/bonde-server
    username: lpirola
    password: ${DOCKER_PASSWORD}
    tags:
      - ${DRONE_BRANCH}
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  deploy-staging:
    image: appleboy/drone-ssh
    host: staging.bonde.org
    username: ubuntu
    port: 22
    script:
      - sudo docker pull nossas/bonde-server:${DRONE_BRANCH}
      - sudo docker tag nossas/bonde-server:${DRONE_BRANCH} dokku/server:${DRONE_BRANCH}
      - dokku tags:deploy server ${DRONE_BRANCH}
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  notify:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: n_tech
    username: CI - ${DRONE_REPO_NAME}
    when:
      event: [ push, tag, build, publish, deployment, pull_request ]
      status: [ success, failure ]
services:
  database:
    image: postgres:9.6.1
    environment:
      - POSTGRES_USER=bonde
  queue:
    image: redis:3.2.4-alpine
